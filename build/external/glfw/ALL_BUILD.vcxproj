<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{42063EC7-A097-3CF0-9E7C-8B47B08644D7}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\shana\Desktop\LearnGL\external\glfw\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building Custom Rule C:/Users/shana/Desktop/LearnGL/external/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
C:\cmake-x64\bin\cmake.exe -SC:/Users/shana/Desktop/LearnGL -BC:/Users/shana/Desktop/LearnGL/build --check-stamp-file C:/Users/shana/Desktop/LearnGL/build/external/glfw/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Users\shana\Desktop\LearnGL\external\glfw\src\glfw3.pc.in;C:\Users\shana\Desktop\LearnGL\external\glfw\src\glfw3Config.cmake.in;C:\Users\shana\Desktop\LearnGL\external\glfw\src\glfw_config.h.in;C:\cmake-x64\share\cmake-3.17\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\cmake-x64\share\cmake-3.17\Modules\CMakeDependentOption.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CMakePackageConfigHelpers.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CheckCSourceCompiles.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CheckIncludeFile.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CheckLibraryExists.cmake;C:\cmake-x64\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;C:\cmake-x64\share\cmake-3.17\Modules\FindPackageMessage.cmake;C:\cmake-x64\share\cmake-3.17\Modules\FindThreads.cmake;C:\cmake-x64\share\cmake-3.17\Modules\GNUInstallDirs.cmake;C:\cmake-x64\share\cmake-3.17\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Users\shana\Desktop\LearnGL\build\external\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building Custom Rule C:/Users/shana/Desktop/LearnGL/external/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
C:\cmake-x64\bin\cmake.exe -SC:/Users/shana/Desktop/LearnGL -BC:/Users/shana/Desktop/LearnGL/build --check-stamp-file C:/Users/shana/Desktop/LearnGL/build/external/glfw/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Users\shana\Desktop\LearnGL\external\glfw\src\glfw3.pc.in;C:\Users\shana\Desktop\LearnGL\external\glfw\src\glfw3Config.cmake.in;C:\Users\shana\Desktop\LearnGL\external\glfw\src\glfw_config.h.in;C:\cmake-x64\share\cmake-3.17\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\cmake-x64\share\cmake-3.17\Modules\CMakeDependentOption.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CMakePackageConfigHelpers.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CheckCSourceCompiles.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CheckIncludeFile.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CheckLibraryExists.cmake;C:\cmake-x64\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;C:\cmake-x64\share\cmake-3.17\Modules\FindPackageMessage.cmake;C:\cmake-x64\share\cmake-3.17\Modules\FindThreads.cmake;C:\cmake-x64\share\cmake-3.17\Modules\GNUInstallDirs.cmake;C:\cmake-x64\share\cmake-3.17\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Users\shana\Desktop\LearnGL\build\external\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building Custom Rule C:/Users/shana/Desktop/LearnGL/external/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
C:\cmake-x64\bin\cmake.exe -SC:/Users/shana/Desktop/LearnGL -BC:/Users/shana/Desktop/LearnGL/build --check-stamp-file C:/Users/shana/Desktop/LearnGL/build/external/glfw/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Users\shana\Desktop\LearnGL\external\glfw\src\glfw3.pc.in;C:\Users\shana\Desktop\LearnGL\external\glfw\src\glfw3Config.cmake.in;C:\Users\shana\Desktop\LearnGL\external\glfw\src\glfw_config.h.in;C:\cmake-x64\share\cmake-3.17\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\cmake-x64\share\cmake-3.17\Modules\CMakeDependentOption.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CMakePackageConfigHelpers.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CheckCSourceCompiles.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CheckIncludeFile.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CheckLibraryExists.cmake;C:\cmake-x64\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;C:\cmake-x64\share\cmake-3.17\Modules\FindPackageMessage.cmake;C:\cmake-x64\share\cmake-3.17\Modules\FindThreads.cmake;C:\cmake-x64\share\cmake-3.17\Modules\GNUInstallDirs.cmake;C:\cmake-x64\share\cmake-3.17\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Users\shana\Desktop\LearnGL\build\external\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building Custom Rule C:/Users/shana/Desktop/LearnGL/external/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
C:\cmake-x64\bin\cmake.exe -SC:/Users/shana/Desktop/LearnGL -BC:/Users/shana/Desktop/LearnGL/build --check-stamp-file C:/Users/shana/Desktop/LearnGL/build/external/glfw/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Users\shana\Desktop\LearnGL\external\glfw\src\glfw3.pc.in;C:\Users\shana\Desktop\LearnGL\external\glfw\src\glfw3Config.cmake.in;C:\Users\shana\Desktop\LearnGL\external\glfw\src\glfw_config.h.in;C:\cmake-x64\share\cmake-3.17\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\cmake-x64\share\cmake-3.17\Modules\CMakeDependentOption.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CMakePackageConfigHelpers.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CheckCSourceCompiles.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CheckIncludeFile.cmake;C:\cmake-x64\share\cmake-3.17\Modules\CheckLibraryExists.cmake;C:\cmake-x64\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;C:\cmake-x64\share\cmake-3.17\Modules\FindPackageMessage.cmake;C:\cmake-x64\share\cmake-3.17\Modules\FindThreads.cmake;C:\cmake-x64\share\cmake-3.17\Modules\GNUInstallDirs.cmake;C:\cmake-x64\share\cmake-3.17\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Users\shana\Desktop\LearnGL\build\external\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\Users\shana\Desktop\LearnGL\build\ZERO_CHECK.vcxproj">
      <Project>{53770551-4AB0-3D0E-90D9-69AB491BDACD}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="C:\Users\shana\Desktop\LearnGL\build\external\glfw\src\glfw.vcxproj">
      <Project>{53220901-B9CC-3695-A3EF-8E78676F4E32}</Project>
      <Name>glfw</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>